; -*- mode: emacs-lisp -*-
;; My .emacs
;; Björn Edström <be@bjrn.se>

(setq load-path (cons "~/emacs" load-path))

;; Configuration of how Emacs should behave.
;; -----------------------------------------

;; Setup Org Mode, the best thing since sliced bread.
(setq load-path (cons "~/emacs/org-mode/lisp" load-path))
(setq load-path (cons "~/emacs/org-mode/contrib/lisp" load-path))

(require 'org-install)
(require 'org-protocol)

(setq org-directory "~/org")
(add-to-list 'auto-mode-alist '("\\.org$" . org-mode))
(define-key global-map "\C-cl" 'org-store-link)
(define-key global-map "\C-ca" 'org-agenda)
(setq org-log-done t)
(setq org-hide-leading-stars t)
(setq org-default-notes-file (concat org-directory "/notes.org"))
(define-key global-map "\C-cc" 'org-capture)

(setq org-todo-keywords
      '((sequence "TODO" "STARTED" "WAITING" "|" "DONE")))

(setq org-todo-keyword-faces
      '(("TODO" . org-warning)
        ("STARTED" . "blue")
        ("WAITING" . "orange")))

;; Use parts of CUA mode. We want the region/mark behaviour, but not
;; the new bindings for \C-x etc.
(cua-mode t)
(setq cua-enable-cua-keys nil)

;; Setup Python.
(add-hook 'python-mode-hook '(lambda ()
    (define-key python-mode-map "\C-m" 'newline-and-indent)))

;; Setup C/C++.
(add-hook 'c-mode-common-hook '(lambda ()
    (local-set-key (kbd "RET") 'newline-and-indent)))
(setq c-default-style "bsd")
(setq c-offsets-alist '(
			(comment-intro . 0)))

;; When in X, paste at cursor instead of mouse pointer.
(setq mouse-yank-at-point t)


;; Configuration of how data should be presented.
;; ----------------------------------------------

;; Generic display options.
(global-font-lock-mode 1)
(show-paren-mode t)

;; Show line and column numbers.
(require 'linum)
(global-linum-mode 1)

(line-number-mode t)
(column-number-mode t)

;; Show trailing white-spaces.
(custom-set-variables '(show-trailing-whitespace t))

;; When keeping several files of the same name open (from different
;; directories), display enough information in the buffer name for a
;; human to distinguish them.
(require 'uniquify)
(setq uniquify-buffer-name-style 'post-forward-angle-brackets)
(setq uniquify-after-kill-buffer-p t)

;; More useful title name please, containing buffer name.
(setq frame-title-format "%b - emacs")

;; Switch to sane non-ambiguous date format.
(setq european-calendar-style t)

;; XXX: Set up a font and disable the toolbar.  This information is in
;; Xdefaults too, however it's needed for emacs --daemon.
(setq default-frame-alist '((font-backend . "xft")
                            (font . "Liberation Mono-10")))
(when (functionp 'tool-bar-mode) (tool-bar-mode 0))

;; Remove the splash screen on startup.
(setq inhibit-splash-screen t)

; TODO: Make this more portable.
(add-to-list 'load-path "/usr/share/emacs/site-lisp/emacs-goodies-el/color-theme.el")
(require 'color-theme)
   (setq color-theme-is-global t)
   (color-theme-vim-colors)

; When using flymake-mode in Python source code, enable checking for
; style guide violations and code errors. pycheckers script uses
; pep8.py and pyflakes.
(when (load "flymake" t)
  (defun flymake-pycheckers-init ()
    (let* ((temp-file (flymake-init-create-temp-buffer-copy
                       'flymake-create-temp-inplace))
           (local-file (file-relative-name
                        temp-file
                        (file-name-directory buffer-file-name))))
      (list "~/environment/python/pycheckers" (list local-file))))

      (add-to-list 'flymake-allowed-file-name-masks
               '("\\.py\\'" flymake-pycheckers-init)))
